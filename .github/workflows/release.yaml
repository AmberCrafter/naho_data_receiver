# .github/workflows/release.yml

on:
  release:
    types: [created]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'ubuntu-24.04'
            args: ''
          # - platform: 'windows-latest'
          #   args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: ${{ matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-24.04' }} # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
        #  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      # - name: setup node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: lts/*
      #     cache: 'yarn' # Set this to npm, yarn or pnpm.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          override: true

      # - name: Unittest

      - name: Build
        run: cargo build --release

      - name: pack
        run: |
          mkdir naho_data_receiver
          cp target/release/naho_data_receiver naho_data_receiver
          cp -r config naho_data_receiver
          tar -cvf naho_data_receiver.tar naho_data_receiver

      - name: Upload arifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-naho_data_receiver
          path: naho_data_receiver.tar

      # - name: Rust cache
      #   uses: swatinem/rust-cache@v2
      #   with:
      #     workspaces: './src-tauri -> target'

      # - name: install frontend dependencies
      #   # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
      #   run: yarn install # change this to npm or pnpm depending on which one you use.

      # - uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
      #     releaseName: 'App v__VERSION__'
      #     releaseBody: 'See the assets to download this version and install.'
      #     releaseDraft: true
      #     prerelease: false
      #     args: ${{ matrix.args }}

  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'ubuntu-24.04'
            args: ''
          # - platform: 'windows-latest'
          #   args: ''

    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: download aritifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform }}-naho_data_receiver
          path: artifacts/${{ matrix.platform }}

      # - name: create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Changes in this Release
      #       - Beta version
      #       - In developing...
      #     draft: false
      #     prerelease: false

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # upload_url: ${{ steps.create_release.outputs.upload_url }}
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifacts/${{ matrix.platform }}/naho_data_receiver.tar
          asset_name: naho_data_receiver-linux-x86_64-${{ matrix.platform }}.tar
          asset_content_type: application/octet-stream

